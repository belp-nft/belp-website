name: Docker
on:
  push:
    branches: [build-prod]
    tags:
      - 'v*'

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_ACCESS_TOKEN }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2
        id: buildx

      - name: Cache Docker Image Layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        id: docker_build
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{secrets.DOCKERHUB_APPNAME}}.prod
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Verify
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  Deploy:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: Install SSH Client
        run: |
          sudo apt-get update && sudo apt-get install -y openssh-client

      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.BELPY_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.BELPY_IP }} >> ~/.ssh/known_hosts

      - name: Deploy
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa \
            ${{ secrets.BELPY_SSH_USERNAME }}@${{ secrets.BELPY_IP }} \
            "cd home/belpy && \
            docker rm -f belpy_website && \
            docker rmi -f ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_APPNAME }}.prod && \
            docker-compose up -d"
